<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Arbitrage Plays</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
        }

        .navbar {
            background-color: #007bff;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: white;
        }

        .navbar h1 {
            margin: 0;
            font-size: 20px;
        }

        .navbar ul {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
        }

        .navbar ul li {
            margin: 0 10px;
        }

        .navbar ul li a {
            color: white;
            text-decoration: none;
        }

        .navbar ul li a:hover {
            text-decoration: underline;
        }

        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 90%;
            max-width: 900px;
            margin: 20px auto;
            text-align: center;
        }

        h1 {
            color: #007bff;
            margin-bottom: 20px;
        }

        .arbitrage-card {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .arbitrage-card h2 {
            margin: 0;
            font-size: 18px;
            color: #333;
        }

        .arbitrage-card p {
            margin: 5px 0;
            font-size: 14px;
        }

        .calculate-button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
        }

        .calculate-button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="navbar">
        <h1>Sports Betting</h1>
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="profile.html">Profile</a></li>
            <li><a href="odds.html">Odds</a></li>
            <li><a href="arbitrage_plays.html">Arbitrage Plays</a></li>
            <li><a href="calculator.html">Calculator</a></li>
        </ul>
    </div>

    <div class="container">
        <h1>Arbitrage Betting Calculator</h1>
        <div id="arbitrage-container" class="arbitrage-data">
            <p>Fetching arbitrage opportunities...</p>
        </div>
    </div>

    <script>
        async function fetchArbitrageOpportunities() {
            const arbitrageContainer = document.getElementById('arbitrage-container');
            arbitrageContainer.innerHTML = '<p>Loading...</p>';

            try {
                const response = await fetch('/api/odds'); // Replace with the actual API endpoint
                if (!response.ok) {
                    throw new Error('Failed to fetch odds data');
                }

                const oddsData = await response.json();
                const eplGames = oddsData.filter(game => game.sport_key === 'soccer_epl');

                if (eplGames.length === 0) {
                    arbitrageContainer.innerHTML = '<p>No arbitrage opportunities available.</p>';
                    return;
                }

                arbitrageContainer.innerHTML = eplGames
                    .map((game) => {
                        const bookmakers = game.bookmakers;
                        if (bookmakers.length < 2) {
                            return `<div class="arbitrage-card">
                                <h2>${game.home_team} vs ${game.away_team}</h2>
                                <p>No arbitrage possible with fewer than 2 bookmakers.</p>
                            </div>`;
                        }

                        const odds = bookmakers.map(bookmaker => {
                            const homeOdds = bookmaker.markets[0]?.outcomes[0]?.price || 0;
                            const awayOdds = bookmaker.markets[0]?.outcomes[1]?.price || 0;
                            return { home: homeOdds, away: awayOdds, title: bookmaker.title };
                        });

                        const totalInverse = odds.reduce((acc, odd) => {
                            return acc + (1 / odd.home) + (1 / odd.away);
                        }, 0);

                        if (totalInverse >= 1) {
                            return `<div class="arbitrage-card">
                                <h2>${game.home_team} vs ${game.away_team}</h2>
                                <p>No arbitrage opportunities here.</p>
                            </div>`;
                        }

                        const stake = 100; // Example stake
                        const investments = odds.map(odd => {
                            return {
                                bookmaker: odd.title,
                                homeStake: (stake / odd.home).toFixed(2),
                                awayStake: (stake / odd.away).toFixed(2)
                            };
                        });

                        return `<div class="arbitrage-card">
                            <h2>${game.home_team} vs ${game.away_team}</h2>
                            ${investments.map(inv => {
                                return `<p>${inv.bookmaker}: Bet $${inv.homeStake} on Home and $${inv.awayStake} on Away</p>`;
                            }).join('')}
                        </div>`;
                    })
                    .join('');

            } catch (error) {
                console.error('Error fetching arbitrage opportunities:', error);
                arbitrageContainer.innerHTML = '<p>Failed to fetch arbitrage opportunities.</p>';
            }
        }

        fetchArbitrageOpportunities();
    </script>
</body>
</html>
